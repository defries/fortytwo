// Custom file for Forty Two Mixins

//
// Mixins
// --------------------------------------------------

// Generate rem font-sizes with pixel fallbacks
// By default uses `@font-size-base` with an initial value of 14 (1.4rem or 14px)
.font-size( @font-size: @font-size-base ) {
	font-size: unit(@font-size, px);
	font-size: unit(@font-size, rem) / 10;
}

.box-padding( @top:0, @right:0, @bottom:0, @left: 0 ) {
	padding: unit(@top, px) unit(@right, px) unit(@bottom, px) unit(@left, px);
	padding: unit((@top /10), rem) unit((@right /10), rem) unit((@bottom /10), rem) unit((@left /10), rem);
}

.ft-nav-divider( @color: #e5e5e5 ) {
	&:after {
		content: " ";
		display: block;
		.nav-divider(@color);
	}
}

.calc-line-height( @screen-size: @screen-phone, @cols: 12, @font-size: @font-size-base, @ratio: @golden ) {
	@f: unit(@font-size);
	@w: (unit(@screen-size) / 12) * @cols;
	@r: @ratio;

	@h: @r - (1 / (2 * @r)) * (1 - (@w / pow(@f * @r, 2)));
	@l: round(@f * @h);

	line-height: @h;
}

.render-column-push(@push) when (isnumber(@push)) and (@push > 0) {
	left: percentage((@push / @grid-columns));
}

.render-column-pull(@pull) when (isnumber(@pull)) and (@pull > 0) {
	right: percentage((@pull / @grid-columns));
}

.render-column(@arguments) when (isstring(extract(@arguments, 1))) and (isnumber(extract(@arguments, 2))) {
	@selector: extract(@arguments, 1);
	@columns: extract(@arguments, 2);
	@push: extract(@arguments, 3);
	@pull: extract(@arguments, 4);
	@gutter: @grid-gutter-width;

	@{selector} {
		color: @arguments;
		color: @selector;
		color: @columns;
		color: @push;
		color: @pull;
		position: relative;
		float: left;
		width: percentage((@columns / @grid-columns));
		min-height: 1px;
		padding-left:  (@gutter / 2);
		padding-right: (@gutter / 2);
		.calc-line-height(@screen-size, @columns);
		.render-column-push(@push);
		.render-column-pull(@pull);
	}
}

.make-column(...) {
	.render-column(@arguments);
}