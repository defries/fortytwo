// Some custom calculation for the Typography
// --------------------------------------------------


// Custom file for FortyTwo Content Layouts





.content-sidebar {
	.content {
		padding-right: @grid-gutter-width;
	}

	.sidebar-primary {
		border-left: @grid-columns-border;
		padding-left: @grid-gutter-width;
	}
}

.sidebar-content {
	.content {
		.make-lg-column-push(@grid-columns-sidebar-primary);
		padding-left: @grid-gutter-width;
	}

	.sidebar-primary {
		.make-lg-column-pull(@grid-columns - @grid-columns-sidebar-primary);
		border-right: @grid-columns-border;
		padding-right: @grid-gutter-width;
	}
}

.content-sidebar-sidebar {
	.content {
		padding-right: @grid-gutter-width;
	}

	.sidebar-primary {
		border-left: @grid-columns-border;
		padding-left: @grid-gutter-width;
		padding-right: @grid-gutter-width;
	}

	.sidebar-secondary {
		border-left: @grid-columns-border;
		padding-left: @grid-gutter-width;
	}
}

.sidebar-sidebar-content {
	.content {
		.make-lg-column-push(@grid-columns-sidebar-primary + @grid-columns-sidebar-secondary);
		padding-left: @grid-gutter-width;
	}

	.sidebar-primary {
		.make-lg-column-pull(@grid-columns-sidebar-primary + @grid-columns-sidebar-secondary);
		border-right: @grid-columns-border;
		padding-right: @grid-gutter-width;
		padding-left: @grid-gutter-width;
	}

	.sidebar-secondary {
		.make-lg-column-pull(@grid-columns - @grid-columns-sidebar-secondary);
		border-right: @grid-columns-border;
		padding-right: @grid-gutter-width;
	}
}

.sidebar-content-sidebar {
	.content {
		.make-lg-column-push(@grid-columns-sidebar-secondary);
		padding-right: @grid-gutter-width;
		padding-left: @grid-gutter-width;
	}

	.sidebar-primary {
		.make-lg-column-push(@grid-columns-sidebar-secondary);
		padding-left: @grid-gutter-width;
		border-left: @grid-columns-border;
	}

	.sidebar-secondary {
		.make-lg-column-pull(@grid-columns - @grid-columns-sidebar-secondary);
		padding-right: @grid-gutter-width;
		border-right: @grid-columns-border;
	}
}


// Extra small grid
//
// Layout small devices like smartphones. No offset, push, or
// pull classes are present here due to the size of the target.

.content-sidebar-wrap {
	min-height: 100%;
	overflow: hidden;
}

.content,
.sidebar-primary,
.sidebar-secondary {
	.height-adjust();
}


// Small grid
//
// Layouts for the small device range, from phones
// to tablets.

@media (min-width: @screen-tablet) {

}


// Medium grid
//
// Layouts for the desktop device range.

@media (min-width: @screen-desktop) {

}


// Large grid
//
// Layouts for the large desktop device range.

@media (min-width: @screen-lg-desktop) {

	@c:          12;
	@c-s:        9 3;
	@c-s-s:      7 3 2;

	.full-width-content {

		.content {
			.make-lg-column(@c);
			.calc-line-height(@screen-lg, @c);
		}
	}

/*	.content-sidebar {
		.set-page-layout(
			content, 9;
			sidebar-primary, 3
		);
	}*/

	.content-sidebar,
	.sidebar-content {
		.content {
			.make-lg-column(extract(@c-s, 1));
			.calc-line-height(@screen-lg, extract(@c-s, 1));
		}

		.sidebar-primary {
			.make-lg-column(extract(@c-s, 2));
			.calc-line-height(@screen-lg, extract(@c-s, 2));
		}
	}

	.content-sidebar-sidebar,
	.sidebar-sidebar-content,
	.sidebar-content-sidebar {
		.content {
			.make-lg-column(extract(@c-s-s, 1));
			.calc-line-height(@screen-lg, extract(@c-s-s, 1));
		}

		.sidebar-primary {
			.make-lg-column(extract(@c-s-s, 2));
			.calc-line-height(@screen-lg, extract(@c-s-s, 2));
		}

		.sidebar-secondary {
			.make-lg-column(extract(@c-s-s, 3));
			.calc-line-height(@screen-lg, extract(@c-s-s, 3));
		}
	}

}
