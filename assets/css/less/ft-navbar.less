// Custom file for navbar to make Bootstrap work with Genesis

//
// Navbar
// --------------------------------------------------

.nav-collapse {
	&:extend(.navbar-collapse all);
}

.nav-title {
	&:extend(.navbar-brand all);
}

.nav-toggle {
	&:extend(.navbar-toggle all);
}

.nav-primary {

	&:extend(.navbar);
	&:extend(.navbar-default);

	.nav-title {
		&:extend(.navbar-default .navbar-brand all);
		.hide;
	}

	.nav-text {
		&:extend(.navbar-default .navbar-text all);
	}

	.menu {
		&:extend(.navbar-default .navbar-nav all);
	}

	.nav-toggle {
		&:extend(.navbar-default .navbar-toggle all);
	}

	.nav-collapse {
		&:extend(.navbar-default .navbar-collapse all);
	}

	// Navbar fixed to the top when the .affix-top class becomes .affix which is controlled by fortytwo.js
	&.affix {

		& + * {
			margin-top: (@navbar-height + 2);
		}

		// This is used to add extra space from the top if the .wpadminbar is visible
		.admin-bar & {
			top: 28px;
		}

		.admin-bar.mp6 & {
			top: 32px;
		}

		&:extend(.navbar-fixed-top);
		&:extend(.navbar-inverse);

		.nav-title {
			&:extend(.navbar-inverse .navbar-brand all);
		}

		.nav-text {
			&:extend(.navbar-inverse .navbar-text all);
			.show;
		}

		.menu {
			&:extend(.navbar-inverse .navbar-nav all);
		}

		.nav-toggle {
			&:extend(.navbar-inverse .navbar-toggle all);
		}

		.nav-collapse {
			&:extend(.navbar-inverse .navbar-collapse all);
		}

	}
/*

	  // Dropdown menu items and carets
	  .navbar-nav {
	    // Caret should match text color on hover
	    > .dropdown > a:hover .caret,
	    > .dropdown > a:focus .caret {
	      border-top-color: @navbar-default-link-hover-color;
	      border-bottom-color: @navbar-default-link-hover-color;
	    }

	    // Remove background color from open dropdown
	    > .open > a {
	      &,
	      &:hover,
	      &:focus {
	        background-color: @navbar-default-link-active-bg;
	        color: @navbar-default-link-active-color;
	        .caret {
	          border-top-color: @navbar-default-link-active-color;
	          border-bottom-color: @navbar-default-link-active-color;
	        }
	      }
	    }
	    > .dropdown > a .caret {
	      border-top-color: @navbar-default-link-color;
	      border-bottom-color: @navbar-default-link-color;
	    }


	    @media (max-width: @screen-xs-max) {
	      // Dropdowns get custom display when collapsed
	      .open .dropdown-menu {
	        > li > a {
	          color: @navbar-default-link-color;
	          &:hover,
	          &:focus {
	            color: @navbar-default-link-hover-color;
	            background-color: @navbar-default-link-hover-bg;
	          }
	        }
	        > .active > a {
	          &,
	          &:hover,
	          &:focus {
	            color: @navbar-default-link-active-color;
	            background-color: @navbar-default-link-active-bg;
	          }
	        }
	        > .disabled > a {
	          &,
	          &:hover,
	          &:focus {
	            color: @navbar-default-link-disabled-color;
	            background-color: @navbar-default-link-disabled-bg;
	          }
	        }
	      }
	    }
	  }

*/





/*	.dropdown-menu {
		margin-left: -1px;
		.font-size(14px);

		// Links within the dropdown menu
		> li > a {
			padding: 8px 20px;
		}

		.nav-menu-divider {
			.ft-nav-divider(@dropdown-divider-bg);
		}
	}

	.dropdown-submenu > .dropdown-menu {
		margin-top: -5px;
	}

	.dropdown-menu > li > a:focus,
	.dropdown-submenu:hover > a,
	.dropdown-submenu:focus > a {
		text-decoration: none;
		color: @dropdown-link-hover-color;
		#gradient > .vertical(@start-color: @dropdown-link-hover-bg; @end-color: darken(@dropdown-link-hover-bg, 5%));
	}


	.navbar {
		border-radius: 0;
		margin-bottom: 0;
	}

	.menu-primary {

		.dropdown-menu {
			min-width: 180px;
		}

		> li {
			border-right: 1px solid #e8e8e8;

			&:first-child {
				border-left: 1px solid #e8e8e8;
			}

			&.open > a {
				background-color: #f8f8f8;
			}

			&.current-menu-parent > a,
			&.current-menu-item > a,
			&.open > a {
				color: @navbar-default-link-hover-color;
			}

		}
	}*/




}

.menu {
	&:extend(.nav all, .navbar-nav all);

	// Sub menus
	// ---------------------------
	.dropdown-submenu {
		position: relative;
	}
	// Default dropdowns
	.dropdown-submenu > .sub-menu {
		top: 0;
		left: 100%;
		margin-top: -6px;
		margin-left: -1px;
		border-top-left-radius: 0; // Nuke the closest corner as appropriate
	}
	.dropdown-submenu:hover > .sub-menu {
		display: block;
	}

	// Dropups
	.dropup .dropdown-submenu > .sub-menu {
		top: auto;
		bottom: 0;
		margin-top: 0;
		margin-bottom: -2px;
		border-bottom-left-radius: 0; // Nuke the closest corner as appropriate
	}

	// Caret to indicate there is a submenu
	.dropdown-submenu > a:after {
		display: block;
		content: " ";
		float: right;
		width: 0;
		height: 0;
		border-color: transparent;
		border-style: solid;
		border-width: 5px 0 5px 5px;
		border-left-color: darken(@dropdown-bg, 20%);
		margin-top: 5px;
		margin-right: -10px;
	}

	.dropdown-submenu:hover > a:after {
		border-left-color: @dropdown-link-hover-color;
	}

	// Left aligned submenus
	.dropdown-submenu.pull-left {
		// Undo the float
		// Yes, this is awkward since .pull-left adds a float, but it sticks to our conventions elsewhere.
		float: none;

		// Positioning the submenu
		> .sub-menu {
			left: -100%;
			margin-left: 10px;
			border-top-right-radius: 0; // Remove the rounded corner here
		}
	}

	> li[class^="icon-"] {

		line-height: 36px;
		position: relative;
		.font-size(23);
		color: #fff;
		.square(36px);
		display: inline-block;
		border-radius: 18px;
		background: #424242;
		text-align: center;
		vertical-align: middle;

		> a {
			position: absolute;
			left: 0;
			.text-hide;
			.square(36px);
		}
	}
}

.caret {
	&:extend(.caret);
}

.sub-menu {
	&:extend(.dropdown-menu all);
}

.open {
	> .sub-menu {
		display: block;
	}

	> a {
		outline: 0;
	}
}